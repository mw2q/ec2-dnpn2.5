BEGIN;
BEGIN
EXPLAIN
select
	s_acctbal,
	s_name,
	n_name,
	p_partkey,
	p_mfgr,
	s_address,
	s_phone,
	s_comment
from
	part,
	supplier,
	partsupp,
	nation,
	region
where
	p_partkey = ps_partkey
	and s_suppkey = ps_suppkey
	and p_size = 47
	and p_type like '%TIN'
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'MIDDLE EAST'
	and ps_supplycost = (
		select
			min(ps_supplycost)
		from
			partsupp,
			supplier,
			nation,
			region
		where
			p_partkey = ps_partkey
			and s_suppkey = ps_suppkey
			and s_nationkey = n_nationkey
			and n_regionkey = r_regionkey
			and r_name = 'MIDDLE EAST'
	)
order by
	s_acctbal desc,
	n_name,
	s_name,
	p_partkey
LIMIT 100;
                                                                                                                                                       QUERY PLAN                                                                                                                                                       
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4146361.06..4146361.06 rows=1 width=190)
   ->  Remote Subquery Scan on all (datanode_1_1,datanode_1_2,datanode_2_1,datanode_2_2,datanode_3_1,datanode_3_2,datanode_4_1,datanode_4_2,datanode_5_1,datanode_5_2,datanode_6_1,datanode_6_2,datanode_7_1,datanode_7_2,datanode_8_1,datanode_8_2)  (cost=4146361.06..4146361.06 rows=1 width=190)
         ->  Limit  (cost=4146361.06..4146361.06 rows=1 width=190)
               ->  Sort  (cost=4146361.06..4146361.06 rows=1 width=190)
                     Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
                     ->  Merge Join  (cost=1749416.40..4146361.05 rows=1 width=190)
                           Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                           Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
                           ->  Index Scan using pk_part on part  (cost=0.19..2165594.45 rows=81114 width=30)
                                 Filter: (((p_type)::text ~~ '%TIN'::text) AND (p_size = 47))
                           ->  Sort  (cost=1749202.61..1751774.61 rows=1028801 width=168)
                                 Sort Key: partsupp.ps_partkey
                                 ->  Nested Loop  (cost=2.72..1646463.80 rows=1028801 width=168)
                                       ->  Hash Join  (cost=2.53..37553.53 rows=200000 width=164)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..31801.00 rows=1000000 width=142)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                       ->  Index Scan using partsupp_ps_suppkey_idx on partsupp  (cost=0.19..7.99 rows=5 width=12)
                                             Index Cond: (ps_suppkey = supplier.s_suppkey)
                           SubPlan 1
                             ->  Aggregate  (cost=54.24..54.25 rows=1 width=4)
                                   ->  Remote Subquery Scan on all (datanode_1_1,datanode_1_2,datanode_2_1,datanode_2_2,datanode_3_1,datanode_3_2,datanode_4_1,datanode_4_2,datanode_5_1,datanode_5_2,datanode_6_1,datanode_6_2,datanode_7_1,datanode_7_2,datanode_8_1,datanode_8_2)  (cost=0.51..54.24 rows=1 width=4)
                                         ->  Aggregate  (cost=0.51..54.24 rows=1 width=4)
                                               ->  Nested Loop  (cost=0.51..54.24 rows=1 width=4)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     ->  Nested Loop  (cost=0.51..53.16 rows=1 width=8)
                                                           ->  Nested Loop  (cost=0.37..53.00 rows=1 width=8)
                                                                 ->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.19..20.19 rows=4 width=8)
                                                                       Index Cond: (part.p_partkey = ps_partkey)
                                                                 ->  Index Scan using pk_supplier on supplier supplier_1  (cost=0.17..8.19 rows=1 width=8)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                           ->  Index Scan using pk_nation on nation nation_1  (cost=0.14..0.16 rows=1 width=8)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4)
                                                           Filter: (r_name = 'MIDDLE EAST'::bpchar)
(41 rows)

COMMIT;
COMMIT
